<?xml version="1.0" encoding="utf-8"?>
<!--

    Copyright (C) 2014 Xillio (support@xillio.com)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<function>
    <description>
Validates a xml file against a xsd file.
    </description>
	<parameterDescriptions>
		<parameterDescription parameterName="xmlFile">
The XML file that will be validated.
        </parameterDescription>
		<parameterDescription parameterName="xsdFile">
The xsd file that will be validated.
        </parameterDescription>
        <parameterDescription parameterName="outputAsList">
When `false`, the default, the method will return `true` if the XML is valid against the XSD and log the issues as warnings.
When `true` the method will return the list of issues, if any: an empty list means the XML is valid.
        </parameterDescription>
	</parameterDescriptions>
	<longDescription>
Validates the given XLM file against the given XSD, allowing to determine whether the XML is valid and/or get the list of validation issues.
	</longDescription>
    <examples>
        <example title="Usage">
            <header>Validating a xml file against a xsd.</header>
            <code>
                use XML;
                use System;

                if (XML.xsdCheck("d:/temp/books.xml", "d:/temp/books.xsd")) {
                    System.print("File is valid!");
                }
            </code>
        </example>
        <example title="Usage">
            <header>Get the list of validation issues</header>
            <code>
                use XML, System, File, Assert, Collection;

                var xmlFileValid = "data/xsdValidationValid.xml";
                var xmlFileInvalid = "data/xsdValidationInvalid.xml";
                var xsdFile = "data/xsdValidation.xsd";


                System.print(XML.xsdCheck(xmlFileInvalid, xsdFile, true));
            </code>
        </example>
    </examples>
    <references>
        <reference>xPath</reference>
    </references>
	    <tags>
        XSD, check, validate, XML
    </tags>
</function>
